# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'ap-northeast-2'
      
    steps:
      - name: Checkout source code.  
        uses: actions/checkout@v2

      - name: Cache node modules      
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
            
      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_REST_API_KEY=$REACT_APP_REST_API_KEY" >> .env.production
          echo "REACT_APP_REDIRECT_URI=$REACT_APP_REDIRECT_URI" >> .env.production
          echo "REACT_APP_API_URL=$REACT_APP_API_URL" >> .env.production
        env:
          REACT_APP_REST_API_KEY: ${{ secrets.REACT_APP_REST_API_KEY }}
          REACT_APP_REDIRECT_URI: ${{ secrets.REACT_APP_REDIRECT_URI }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
      
      - name: yarn install 
        run: yarn install

      - name: Build                   
        run: yarn build
        env:
          CI: "" # 경고를 에러로 보지 않게 함

      - name: Deploy S3 # Upload build file to S3
        run: |
          aws s3 cp --recursive --region ap-northeast-2 build s3://make-cake.com
            
      - name: Invalidate cache CloudFront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION_ID }}
          PATHS: '/*'
        continue-on-error: true
